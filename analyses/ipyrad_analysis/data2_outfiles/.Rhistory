library(readxl)
Exam_grades <- read_excel("~/Documents/Teaching/ESCI426/Grades_2018/Exam_grades.xlsx",
sheet = "Exam2", col_types = c("text",
"numeric", "text", "numeric", "numeric",
"numeric", "numeric"))
View(Exam_grades)
hist(Exam_grades[,4])
View(Exam_grades)
library(readxl)
Exam_grades <- read_excel("~/Documents/Teaching/ESCI426/Grades_2018/Exam_grades.xlsx",
sheet = "Exam2", col_types = c("text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(Exam_grades)
hist(Exam_grades[,4])
hist(as.numeric(Exam_grades[,4]))
written <- as.numeric(Exam_grades[,4])
written <- Exam_grades[,4]
hist(written)
hist(as.numeric(written))
written
written <- as.vector(Exam_grades[,4])
written
is.numeric(written)
as.numeric(written)
library(readxl)
Exam_grades <- read_excel("~/Documents/Teaching/ESCI426/Grades_2018/Exam_grades.xlsx",
sheet = "Exam2", col_types = c("text",
"numeric", "text", "numeric", "numeric",
"numeric", "numeric"))
View(Exam_grades)
grades <- read.delim(/Users/jd/Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim(Users/jd/Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim(Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim(~Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim(~/Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim(~/jd/Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim(~jd/Documents/Teaching/ESCI426/Grades_2018/exam2.txt)
grades <- read.delim("~/Documents/Teaching/ESCI426/Grades_2018/exam2.txt")
View(grades)
hist(grades[,1])
hist(grades$written)
hist(grades$practical)
par(mfrow = c(1, 2))
hist(grades$written)
hist(grades$practical)
setwd("~/Documents/Projects//Users/jd/Documents/Projects/PoritesRADseq/P.ast-transplant/analyses/ipyrad_analysis/data2_outfiles") #BEST ONE YET
setwd("~/Documents/Projects/PoritesRADseq/P.ast-transplant/analyses/ipyrad_analysis/data2_outfiles") #BEST ONE YET
library(ape, quietly = TRUE)
library(reshape2, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(edgeR, quietly = TRUE)
library(adegenet, quietly = TRUE)
library(ade4, quietly = TRUE)
library(hierfstat, quietly = TRUE)
library(vegan, quietly = TRUE)
library(RColorBrewer, quietly = TRUE)
library(superheat, quietly = TRUE)
geno1 <- read.table("data2.u.geno", colClasses = 'character', header = FALSE)
geno2 <- read.fwf("data2.u.geno", widths=rep(1, max(nchar(geno1$V1))), colClasses = 'numeric', header=FALSE)
header <- read.delim("header.txt", header=FALSE)
names <- t(header)
names2 <-as.vector(names)
colnames(geno2) <- names2
geno6 <- geno2[,c(37:44,59:70,73:76,83:90)] #subset of samples of interest
geno7 <- geno6[!rowSums(geno6 == 9) >= 1,] #this removes missing values for a complete dataset
geno4 <- t(geno7)
epidd_dist <- dist.gene(geno4, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
epidd_dist2 <- as.matrix(epidd_dist)
epidd_dist3 <- epidd_dist2[c(seq(from =1, to = nrow(epidd_dist2), by= 2)),
c(seq(from =2, to = ncol(epidd_dist2), by= 2))]
melted <- melt(epidd_dist3, na.rm = TRUE)
ggplot(data = melted, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "white", high = "blue", limit = c(0,0.3), space = "Lab",
name="SNP
Mismatches") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 9.5, hjust = 1))+
labs(x= "EpiRADseq samples", y = "ddRADseq samples")+
coord_fixed()
Epidata <- read.delim("out.DP.FORMAT", header=TRUE)
ggplot(data = melted, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "white", high = "blue", limit = c(0,0.25), space = "Lab",
name="SNP
Mismatches") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 9.5, hjust = 1))+
labs(x= "EpiRADseq samples", y = "ddRADseq samples")+
coord_fixed()
Epidata <- read.delim("out.DP.FORMAT", header=TRUE)
Epidata2 <- aggregate(.~CHROM, data=Epidata, mean)
rownames(Epidata2) <- Epidata2$CHROM
Epidata_10 <- Epidata2[,c(39:42)]
Epidata_11 <- Epidata2[,c(43:46)]
Epidata_02 <- Epidata2[,c(61:64)]
Epidata_03 <- Epidata2[,c(65:68)]
Epidata_05 <- Epidata2[,c(69:72)]
Epidata_06 <- Epidata2[,c(75:78)]
Epidata_08 <- Epidata2[,c(85:88)]
Epidata_09 <- Epidata2[,c(89:92)]
Epidata_10_1 <- Epidata_10[apply(Epidata_10[c(seq(1, ncol(Epidata_10), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_11_1 <- Epidata_11[apply(Epidata_11[c(seq(1, ncol(Epidata_11), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_02_1 <- Epidata_02[apply(Epidata_02[c(seq(1, ncol(Epidata_02), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_03_1 <- Epidata_03[apply(Epidata_03[c(seq(1, ncol(Epidata_03), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_05_1 <- Epidata_05[apply(Epidata_05[c(seq(1, ncol(Epidata_05), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_06_1 <- Epidata_06[apply(Epidata_06[c(seq(1, ncol(Epidata_06), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_08_1 <- Epidata_08[apply(Epidata_08[c(seq(1, ncol(Epidata_08), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata_09_1 <- Epidata_09[apply(Epidata_09[c(seq(1, ncol(Epidata_09), by = 2))],1,
function(z) !any(z <= 15)), ] #increased from z==0
Epidata4 <- list(Epidata_10_1, Epidata_11_1, Epidata_02_1, Epidata_03_1, Epidata_05_1,
Epidata_06_1, Epidata_08_1, Epidata_09_1)
par(mfrow = c(5, 5))
par(mar = c(2, 2 ,2 ,2), oma = c(4, 4, 0.5, 0.5))
for (i in seq(1,ncol(Epidata4[[1]]), by = 2)){
for (j in 1:8){
plot(Epidata4[[j]][,i], Epidata4[[j]][,i+1], main = colnames(Epidata4[[j]][i]), col = "blue")
}
}
counts <- lapply(Epidata4, DGEList)
counts
counts2 <- lapply(counts, calcNormFactors)
counts2
counts2_cpm <- lapply(counts2, cpm, normalized.lib.sizes=TRUE, log=TRUE)
par(mfrow = c(5, 5))
par(mar = c(2, 2 ,2 ,2), oma = c(4, 4, 0.5, 0.5))
for (i in seq(1,ncol(counts2_cpm[[1]]), by = 2)){
for (j in 1:8){
plot(counts2_cpm[[j]][,i], counts2_cpm[[j]][,i+1], main = colnames(counts2_cpm[[j]][i]), col = "blue")
}
}
model_10_15 <- lm(counts2_cpm[[1]][,2] ~ counts2_cpm[[1]][,1])
model_10_16 <- lm(counts2_cpm[[1]][,4] ~ counts2_cpm[[1]][,3])
model_11_15 <- lm(counts2_cpm[[2]][,2] ~ counts2_cpm[[2]][,1])
model_11_16 <- lm(counts2_cpm[[2]][,4] ~ counts2_cpm[[2]][,3])
model_02_15 <- lm(counts2_cpm[[3]][,2] ~ counts2_cpm[[3]][,1])
model_02_16 <- lm(counts2_cpm[[3]][,4] ~ counts2_cpm[[3]][,3])
model_03_15 <- lm(counts2_cpm[[4]][,2] ~ counts2_cpm[[4]][,1])
model_03_16 <- lm(counts2_cpm[[4]][,4] ~ counts2_cpm[[4]][,3])
model_05_15 <- lm(counts2_cpm[[5]][,2] ~ counts2_cpm[[5]][,1])
model_05_16 <- lm(counts2_cpm[[5]][,4] ~ counts2_cpm[[5]][,3])
model_06_15 <- lm(counts2_cpm[[6]][,2] ~ counts2_cpm[[6]][,1])
model_06_16 <- lm(counts2_cpm[[6]][,4] ~ counts2_cpm[[6]][,3])
model_08_15 <- lm(counts2_cpm[[7]][,2] ~ counts2_cpm[[7]][,1])
model_08_16 <- lm(counts2_cpm[[7]][,4] ~ counts2_cpm[[7]][,3])
model_09_15 <- lm(counts2_cpm[[8]][,2] ~ counts2_cpm[[8]][,1])
model_09_16 <- lm(counts2_cpm[[8]][,4] ~ counts2_cpm[[8]][,3])
models <- list(model_10_15, model_10_16, model_11_15, model_11_16, model_02_15,
model_02_16, model_03_15, model_03_16, model_05_15, model_05_16,
model_06_15, model_06_16, model_08_15, model_08_16, model_09_15, model_09_16)
residuals <- lapply(models, '[[', 2)
par(mfrow = c(5, 5))
par(mar = c(2, 2 ,2 ,2), oma = c(4, 4, 0.5, 0.5))
for (i in 1:length(residuals)){
plot(residuals[[i]], col = "blue", ylim = c(-10, 4))
}
set.seed(1234)
clusters <- lapply(residuals, kmeans, 2)
clusters2 <- lapply(clusters, '[[', 1)
clusters3 <- lapply(clusters2[c(3,4,5,6,7,11,12,13,14,15)], function(x) ifelse(x == 2, 1, 2))
clusters4 <- list(clusters2[[1]], clusters2[[2]], clusters3[[1]], clusters3[[2]],
clusters3[[3]], clusters3[[4]], clusters3[[5]], clusters2[[8]],
clusters2[[9]], clusters2[[10]], clusters3[[6]], clusters3[[7]],
clusters3[[8]], clusters3[[9]], clusters3[[10]], clusters2[[16]])
par(mfrow = c(5, 5))
par(mar = c(2,2, 2, 2), oma = c(4, 4, 0.5, 0.5))
for (i in 1:length(clusters4)){
plot(residuals[[i]], col = clusters4[[i]], ylim = c(-10, 4))
}
Sym_resid_all_binary <- lapply(clusters4, function(x) x-1)
Sym_prop_methyl <- lapply(Sym_resid_all_binary, function(x) sum(x) / length(x))
diff <- list()
for (i in seq(1,length(unlist(Sym_resid_all_binary)), by = 2)){
diff[[i]] <- Sym_resid_all_binary[[i]] - Sym_resid_all_binary[[i+1]]
}
past10diff <- as.data.frame(unlist(diff[[1]]))
past11diff <- as.data.frame(unlist(diff[[3]]))
past02diff <- as.data.frame(unlist(diff[[5]]))
past03diff <- as.data.frame(unlist(diff[[7]]))
past05diff <- as.data.frame(unlist(diff[[9]]))
past06diff <- as.data.frame(unlist(diff[[11]]))
past08diff <- as.data.frame(unlist(diff[[13]]))
past09diff <- as.data.frame(unlist(diff[[15]]))
temp <- merge(past10diff, past11diff, by = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past02diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past03diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past05diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past06diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past08diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past09diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
row.names(temp) <- temp$Row.names
difftable <- temp[,c(2:9)]
diff1 <- difftable[rowSums(difftable, na.rm = TRUE) < 8, ]
diff2 <- diff1[abs(rowSums(difftable, na.rm = TRUE)) >= 3, ]
seqs <- as.numeric(rownames(diff2))-1
diff <- list()
for (i in seq(1,length(unlist(Sym_resid_all_binary)), by = 2)){
diff[[i]] <- Sym_resid_all_binary[[i]] - Sym_resid_all_binary[[i+1]]
}
past10diff <- as.data.frame(unlist(diff[[1]]))
past11diff <- as.data.frame(unlist(diff[[3]]))
past02diff <- as.data.frame(unlist(diff[[5]]))
past03diff <- as.data.frame(unlist(diff[[7]]))
past05diff <- as.data.frame(unlist(diff[[9]]))
past06diff <- as.data.frame(unlist(diff[[11]]))
past08diff <- as.data.frame(unlist(diff[[13]]))
past09diff <- as.data.frame(unlist(diff[[15]]))
temp <- merge(past10diff, past11diff, by = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past02diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past03diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past05diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past06diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past08diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
temp <- merge(temp, past09diff, by.x = 1, by.y = 0, all.x = TRUE, all.y = TRUE)
row.names(temp) <- temp$Row.names
difftable <- temp[,c(2:9)]
diff1 <- difftable[rowSums(difftable, na.rm = TRUE) < 8, ]
diff2 <- diff1[abs(rowSums(difftable, na.rm = TRUE)) >= 3, ]
seqs <- as.numeric(rownames(diff2))-1
write.table(seqs, file = "seqs_test.txt", row.names = FALSE, col.names = FALSE)
Epidata3 <- Epidata2[,c(39:46,61:72,75:78,85:92)]
Epidata4 <- Epidata3[apply(Epidata3[c(seq(1, 32, by = 2))],1,
function(z) !any(z<=15)),] #increased from z==0
counts <- DGEList(counts=Epidata4)
counts$samples
counts2 <- calcNormFactors(counts)
counts2$samples
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
par(mfrow = c(5, 5))
par(mar = c(2, 2 ,2 ,2), oma = c(4, 4, 0.5, 0.5))
for (i in seq(1,ncol(Epidata4), by = 2)){
plot(Epidata4[,i], Epidata4[,i+1], main = colnames(Epidata4[i]), col = "blue")
}
par(mfrow = c(5, 5))
par(mar = c(2, 2, 2, 2), oma = c(4, 4, 0.5, 0.5))
for (i in seq(1,ncol(counts2_cpm), by = 2)){
plot(counts2_cpm[,i], counts2_cpm[,i+1], main = colnames(counts2_cpm[i]), col = "blue")
}
models <- list()
for (i in seq(1,ncol(counts2_cpm), by = 2)){
models[[colnames(counts2_cpm)[i]]] <- lm(counts2_cpm[,i+1] ~ counts2_cpm[,i])
}
residuals <- lapply(models, '[[', 2)
resid_all <- as.data.frame(residuals)
par(mfrow = c(5, 5))
par(mar = c(2,2, 2, 2), oma = c(4, 4, 0.5, 0.5))
for (i in 1:ncol(resid_all)){
plot(resid_all[,i], col = "blue", ylim = c(-10, 4))
}
set.seed(1234)
clusters <- lapply(residuals, kmeans, 2)
clusters2 <- lapply(clusters, '[[', 1)
clusters3 <- as.data.frame(clusters2)
clusters3[,c(2,4,5,8,10,12:14)] <-ifelse(clusters3[,c(2,4,5,8,10,12:14)] == 2, 1, 2)
clusters4 <- as.matrix(clusters3)
par(mfrow = c(5, 5))
par(mar = c(2,2, 2, 2), oma = c(4, 4, 0.5, 0.5))
for (i in 1:ncol(resid_all)){
plot(resid_all[,i], col = clusters4[,i], ylim = c(-10, 4))
}
heatmap(clusters4, scale = "none")
par(mfrow = c(3, 1))
par(mar = c(4, 4.5, 2, 1), oma = c(1, 1, 0, 0))
plot(Epidata5[,13], Epidata5[,14], xlab = "ddRAD read counts", ylab = "EpiRAD read counts",
col = "blue", cex.axis = 1.1, cex.lab = 1.2, yaxp = c(0, 300, 3))
plot(counts2_cpm[,13], counts2_cpm[,14], xlab = "ddRAD read counts", ylab = "EpiRAD read counts",
col = "blue", cex.axis = 1.1, cex.lab = 1.2)
abline(models$`109_ddr`)
plot(resid_all[,7], ylab = "Residual", col = "blue", cex.axis = 1.1, cex.lab = 1.2)
abline(h = -1, lty = "dotted")
mtext('A', side=3, line=-1.6, at = 0.15, outer=TRUE)
mtext('B', side=3, line=-20, at = 0.15, outer=TRUE)
mtext('C', side=3, line=-39, at = 0.15, outer=TRUE)
resid_all_binary <- clusters4-1
prop_methyl <- colSums(resid_all_binary) / nrow(resid_all_binary)
dens <- density(prop_methyl)
par(mfrow = c(1, 1))
par(mar = c(5, 4, 4, 2))
plot(dens, xlab = "Methylation", ylab = "Density", main = "")
mean(prop_methyl)
sd(prop_methyl)
resid0 <- length(which(rowSums(resid_all_binary) == 0))/(length(resid_all_binary[,1])) #loci consitutively unmethylated
resid1 <- length(which(rowSums(resid_all_binary) == 1))/(length(resid_all_binary[,1])) #loci with 1 instance of methylation
resid2 <- length(which(rowSums(resid_all_binary) == 2))/(length(resid_all_binary[,1])) #loci with 2 instances of methylation
resid3 <- length(which(rowSums(resid_all_binary) == 3))/(length(resid_all_binary[,1])) #loci with 3 instances of methylation
resid4 <- length(which(rowSums(resid_all_binary) == 4))/(length(resid_all_binary[,1]))
resid5 <- length(which(rowSums(resid_all_binary) == 5))/(length(resid_all_binary[,1]))
resid6 <- length(which(rowSums(resid_all_binary) == 6))/(length(resid_all_binary[,1]))
resid7 <- length(which(rowSums(resid_all_binary) == 7))/(length(resid_all_binary[,1]))
resid8 <- length(which(rowSums(resid_all_binary) == 8))/(length(resid_all_binary[,1]))
resid9 <- length(which(rowSums(resid_all_binary) == 9))/(length(resid_all_binary[,1]))
resid10 <- length(which(rowSums(resid_all_binary) == 10))/(length(resid_all_binary[,1]))
resid11 <- length(which(rowSums(resid_all_binary) == 11))/(length(resid_all_binary[,1]))
resid12 <- length(which(rowSums(resid_all_binary) == 12))/(length(resid_all_binary[,1]))
resid13 <- length(which(rowSums(resid_all_binary) == 13))/(length(resid_all_binary[,1]))
resid14 <- length(which(rowSums(resid_all_binary) == 14))/(length(resid_all_binary[,1]))
resid15 <- length(which(rowSums(resid_all_binary) == 15))/(length(resid_all_binary[,1]))
resid16 <- length(which(rowSums(resid_all_binary) == 16))/(length(resid_all_binary[,1]))
obs <- seq(0,16,1)
meth_obs <- rbind(resid0, resid1, resid2, resid3, resid4, resid5, resid6, resid7, resid8, resid9,
resid10, resid11, resid12, resid13, resid14, resid15, resid16)
methobs <- cbind(meth_obs,obs)
names <- c("pa10-15", "pa10-16", "pa11-15", "pa11-16", "pa2-15", "pa2-16", "pa3-15",
"pa3-16", "pa5-15", "pa5-16", "pa5h-16", "pa6-15", "pa6-16", "pa8-15", "pa8-16",
"pa9-15", "pa9-16")
colnames(resid_all_binary) <- names
resid_t_binary <- t(resid_all_binary)
epidist <- dist(resid_t_binary)
epifit <- cmdscale(epidist,eig=TRUE, k=2)
epix <- epifit$points[,1]
epiy <- epifit$points[,2]
plot(epix, epiy, xlab="Coordinate 1", ylab="Coordinate 2", type = 'n')
for (i in seq(1,17, by = 2)){
arrows(epix[i], epiy[i], epix[i+1], epiy[i+1], length = 0.1, col = "gray")
}
names2 <- c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8)
palette(brewer.pal(n = 8, name = "Set2"))
text(epix, epiy, labels = row.names(resid_t_binary), cex=.7, font = 2)
View(resid_all_binary)
names <- c("pa10-15", "pa10-16", "pa11-15", "pa11-16", "pa2-15", "pa2-16", "pa3-15",
"pa3-16", "pa5-15", "pa5-16", "pa6-15", "pa6-16", "pa8-15", "pa8-16",
"pa9-15", "pa9-16")
colnames(resid_all_binary) <- names
resid_t_binary <- t(resid_all_binary)
epidist <- dist(resid_t_binary)
epifit <- cmdscale(epidist,eig=TRUE, k=2)
epix <- epifit$points[,1]
epiy <- epifit$points[,2]
plot(epix, epiy, xlab="Coordinate 1", ylab="Coordinate 2", type = 'n')
for (i in seq(1,17, by = 2)){
arrows(epix[i], epiy[i], epix[i+1], epiy[i+1], length = 0.1, col = "gray")
}
names2 <- c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8)
palette(brewer.pal(n = 8, name = "Set2"))
text(epix, epiy, labels = row.names(resid_t_binary), cex=.7, font = 2)
#Matrix for heatmap
heat.mat <- cbind(prop_methyl,t(resid_all_binary))
names <- c("pa10-15", "pa10-16", "pa11-15", "pa11-16", "pa2-15", "pa2-16", "pa3-15",
"pa3-16", "pa5-15", "pa5-16", "pa6-15", "pa6-16", "pa8-15", "pa8-16",
"pa9-15", "pa9-16")
heat.mat2 <- t(heat.mat)
colnames(heat.mat2) <- names
heat.mat2 <- heat.mat2[,sort(colnames(heat.mat2))]
superheat(heat.mat2[2:650, c(1:16)], bottom.label.text.size = 5,
scale = FALSE, row.dendrogram = TRUE, col.dendrogram = FALSE,
pretty.order.cols = FALSE, pretty.order.rows = TRUE,
heat.pal = c("#6baed6", "#08519c"), yt = heat.mat2[1,c(1:16)],
legend = FALSE, grid.vline.col = "white", left.label = "none",
grid.hline.size = 0.1,bottom.label.text.angle = 90,
yt.axis.name = "Methylation", yt.plot.type = "bar")
temp <- t(resid_all_binary)
temp2 <- dist.gene(temp, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
dist1 <- as.matrix(temp2)
dist2 <- epidd_dist2[c(seq(from =1, to = nrow(epidd_dist2), by= 2)),
c(seq(from =2, to = ncol(epidd_dist2), by= 2))]
temp <- t(resid_all_binary[,c(seq(1,16, by = 2))])
temp2 <- dist.gene(temp, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
dist3 <- as.matrix(temp2)
get_upper_tri <- function(dist3){
dist3[lower.tri(dist3)]<- NA
return(dist3)
}
upper_tri <- get_upper_tri(dist3)
dist4 <- melt(upper_tri, na.rm = TRUE)
dist5 <- dist4[!(dist4$value == 0) >= 1,]
temp <- t(resid_all_binary[,c(seq(2,16, by = 2))])
temp2 <- dist.gene(temp, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
dist6 <- as.matrix(temp2)
get_upper_tri <- function(dist6){
dist6[lower.tri(dist6)]<- NA
return(dist6)
}
upper_tri <- get_upper_tri(dist6)
dist7 <- melt(upper_tri, na.rm = TRUE)
dist8 <- dist7[!(dist7$value == 0) >= 1,]
year <- as.factor(rep(c("2015", "2016"), each = 28))
per_change <- rbind(dist5, dist8)
per_change2 <- cbind(per_change$value, year)
year2 <- as.factor(rep(c("2015", "2016"), 8))
prop_methyl2 <- cbind(prop_methyl,year2)
par(mfrow = c(2, 2))
par(mar = c(4, 4.5, 2, 1), oma = c(1, 1, 0, 0))
boxplot(prop_methyl2[,1]*100 ~ year2, col= c("#e0ecf4", "#9ebcda"),
main = "Percent CpG methylation by year", cex.axis = 1.7, cex.main = 1.7)
boxplot(per_change2[,1]*100 ~ year, col= c("#e0ecf4", "#9ebcda"),
main = "Percent pairwise difference between colonies",
cex.axis = 1.7, cex.main = 1.7)
boxplot(diag(dist2)*100, col= c("#8856a7"),
main = "Percent change in 'clones' after transplantation",
cex.axis = 1.7, cex.main = 1.7)
barplot(methobs[,1], names.arg = methobs[,2], col = "#8856a7",
main = "Percentage of loci by incidences of methylation",
cex.axis = 1.7, cex.lab = 1.7, cex.main = 1.7, cex = 1.7)
snpdist <- t(geno7[,c(seq(1,32, by = 2))])
snpdist2 <- dist.gene(snpdist, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
snpdist3 <- as.matrix(snpdist2)
get_lower_tri<-function(snpdist3){
snpdist3[upper.tri(snpdist3)] <- NA
return(snpdist3)
}
get_upper_tri <- function(snpdist3){
snpdist3[lower.tri(snpdist3)]<- NA
return(snpdist3)
}
upper_tri <- get_upper_tri(snpdist3)
snpdist4 <- melt(upper_tri, na.rm = TRUE)
snpdist5 <- snpdist4[!(snpdist4$value == 0) >= 1,]
resid_diff <- t(resid_t_binary)
methdist <- t(resid_diff)
methdist2 <- dist.gene(methdist, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
methdist3 <- as.matrix(methdist2)
get_lower_tri<-function(methdist3){
methdist3[upper.tri(methdist3)] <- NA
return(methdist3)
}
get_upper_tri <- function(methdist3){
methdist3[lower.tri(methdist3)]<- NA
return(methdist3)
}
upper_tri <- get_upper_tri(methdist3)
methdist4 <- melt(upper_tri, na.rm = TRUE)
methdist5 <- methdist4[!(methdist4$value == 0) >= 1,]
epi_snp_lm <- lm(snpdist5[,3] ~ methdist5[,3])
summary(epi_snp_lm)
snpdist6 <- snpdist5[which(snpdist5[,3]>0.1),]
methdist6 <- methdist5[which(methdist5[,3]>0.159),]
epi_snp_lm_no_out <- lm(snpdist6[,3] ~ methdist6[,3])
summary(epi_snp_lm_no_out)
plot(snpdist5[,3], methdist5[,3], ylim = c(0.02, 0.07), xlim = c(0.12,0.20),col = "blue",
xlab = "Genetic distance", ylab = "Epigenetic distance")
abline(epi_snp_lm, col = "orange")
abline(epi_snp_lm_no_out, col = "green")
dev.off()
plot(snpdist5[,3], methdist5[,3], ylim = c(0.02, 0.07), xlim = c(0.12,0.20),col = "blue",
xlab = "Genetic distance", ylab = "Epigenetic distance")
abline(epi_snp_lm, col = "orange")
abline(epi_snp_lm_no_out, col = "green")
epi_snp_lm_no_out <- lm(snpdist6[,3] ~ methdist6[,3])
epi_snp_lm <- lm(snpdist5[,3] ~ methdist5[,3])
summary(epi_snp_lm)
abline(epi_snp_lm, col = "orange")
Sym_resid_all_binary <- lapply(clusters4, function(x) x-1)
Sym_prop_methyl <- lapply(Sym_resid_all_binary, function(x) sum(x) / length(x))
diff <- list()
for (i in seq(1,length(unlist(Sym_resid_all_binary)), by = 2)){
diff[[i]] <- Sym_resid_all_binary[[i]] - Sym_resid_all_binary[[i+1]]
}
library(knitr)
library(markdown)
knit("report.Rmd")
knit("PoritesRAD_analysis.Rmd")
install.packages("rmarkdown")
